{
	"info": {
		"_postman_id": "3ea6cd01-6c45-47e6-a7a1-df655f274164",
		"name": "P11_MedHead",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27429621"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "register",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"All status Ok\",function(){\r",
									"    pm.response.to.have.status(200)\r",
									"    pm.response.to.be.ok;\r",
									"    pm.response.text(\"User registered success!\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\" : \"oc-al\",\r\n    \"password\" : \"meadhead\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"register"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if(pm.response.code === 200) {\r",
									"    var my_token_response = JSON.parse(responseBody); \r",
									"    pm.collectionVariables.set(\"authToken\",\r",
									"    //my_token_response.tokenType+\r",
									"    my_token_response.accessToken);\r",
									"}\r",
									"\r",
									"\r",
									"pm.test(\"All status Ok\",function(){\r",
									"    pm.response.to.have.status(200)\r",
									"    pm.response.to.be.ok;\r",
									"    pm.response.text(\"User registered success!\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\" : \"oc-al\",\r\n    \"password\" : \"meadhead\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "noauth"
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "AccurateValues",
			"item": [
				{
					"name": "SpecGroupOk",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"All status Ok\",function(){\r",
									"    pm.response.to.have.status(200)\r",
									"    pm.response.to.be.ok;\r",
									"    pm.response.to.be.json;\r",
									"\r",
									"    var specgnmb = JSON.parse(responseBody); \r",
									"    pm.collectionVariables.set(\"specgroup\",\r",
									"    //my_token_response.tokenType+\r",
									"    specgnmb);\r",
									"\r",
									"    for (var i = 0 ;  i < specgnmb.length; i++){\r",
									"        pm.expect(true,specgnmb[i][\"id\"] = i+1);\r",
									"    }\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/SpecGroup",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"SpecGroup"
							]
						}
					},
					"response": []
				},
				{
					"name": "SpecGroupOk Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"All status Ok\",function(){\r",
									"    pm.response.to.have.status(200)\r",
									"    pm.response.to.be.ok;\r",
									"    pm.response.to.be.json;\r",
									"\r",
									"    var specgnmb = JSON.parse(responseBody); \r",
									"    pm.collectionVariables.set(\"specgroup\",\r",
									"    //my_token_response.tokenType+\r",
									"    specgnmb);\r",
									"\r",
									"    for (var i = 0 ;  i < specgnmb.length; i++){\r",
									"        pm.expect(true,specgnmb[i][\"id\"] = i+1);\r",
									"    }\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/SpecGroup",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"SpecGroup"
							]
						}
					},
					"response": []
				},
				{
					"name": "SpecialitiesOk",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"All status Ok\",function(){\r",
									"    pm.response.to.have.status(200)\r",
									"    pm.response.to.be.ok;\r",
									"    pm.response.to.be.json;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/Specialities?spec_group_id=10",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"Specialities"
							],
							"query": [
								{
									"key": "spec_group_id",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "HospitalOK",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"All status Ok\",function(){\r",
									"    pm.response.to.have.status(200)\r",
									"    pm.response.to.be.ok;\r",
									"    pm.response.to.be.json;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/hospitals?address=London, England&spec_id=12",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"hospitals"
							],
							"query": [
								{
									"key": "address",
									"value": "London, England"
								},
								{
									"key": "spec_id",
									"value": "12"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "BadAuthTesting",
			"item": [
				{
					"name": "register Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Username Taken\",function(){\r",
									"    pm.response.to.have.status(400)\r",
									"    pm.response.text(\"Username is taken !\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\" : \"oc-al\",\r\n    \"password\" : \"meadhead\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"register"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "login WrongPassword",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if(pm.response.code === 200) {\r",
									"    var my_token_response = JSON.parse(responseBody); \r",
									"    pm.collectionVariables.set(\"authToken\",\r",
									"    //my_token_response.tokenType+\r",
									"    my_token_response.accessToken);\r",
									"}\r",
									"\r",
									"\r",
									"pm.test(\"Wrong Password\",function(){\r",
									"    pm.response.to.have.status(401)\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\" : \"oc-al\",\r\n    \"password\" : \"meadhead_\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "LoginNoUsername",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if(pm.response.code === 200) {\r",
									"    var my_token_response = JSON.parse(responseBody); \r",
									"    pm.collectionVariables.set(\"authToken\",\r",
									"    //my_token_response.tokenType+\r",
									"    my_token_response.accessToken);\r",
									"}\r",
									"\r",
									"\r",
									"pm.test(\"Wrong Password\",function(){\r",
									"    pm.response.to.have.status(401)\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"password\" : \"meadhead\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "LoginNoPassword",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if(pm.response.code === 200) {\r",
									"    var my_token_response = JSON.parse(responseBody); \r",
									"    pm.collectionVariables.set(\"authToken\",\r",
									"    //my_token_response.tokenType+\r",
									"    my_token_response.accessToken);\r",
									"}\r",
									"\r",
									"pm.test(\"No Username\",function(){\r",
									"    pm.response.to.have.status(401)\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\" : \"oc-al\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "NoAuthTesting",
			"item": [
				{
					"name": "SpecGroup401",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/SpecGroup",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"SpecGroup"
							]
						}
					},
					"response": []
				},
				{
					"name": "Specialities401",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/Specialities?spec_group_id=4",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"Specialities"
							],
							"query": [
								{
									"key": "spec_group_id",
									"value": "4"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Hospitals401",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/hospitals?address=London, England&spec_id=12",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"hospitals"
							],
							"query": [
								{
									"key": "address",
									"value": "London, England"
								},
								{
									"key": "spec_id",
									"value": "12"
								}
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "noauth"
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test(\"All Status 401\",function(){",
							"    pm.response.to.have.status(401);",
							"    pm.response.to.be.unauthorized;",
							"    //pm.response.to.be.text;",
							"});"
						]
					}
				}
			]
		},
		{
			"name": "RandomValues",
			"item": [
				{
					"name": "SpecialitiesRandom",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"All status Ok\",function(){\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.be.ok;\r",
									"    pm.response.to.be.json;\r",
									"    var answer = pm.response.json();\r",
									"    var firstval = answer[0][\"id\"];\r",
									"    for( var i =0; i < answer.length; i++){\r",
									"        pm.expect(answer[i][\"id\"] == firstval+i,true);\r",
									"        pm.expect(answer[i][\"specgroup\"][\"id\"] == pm.collectionVariables.get(\"randomgroupid\"),true);\r",
									"    }\r",
									"    pm.expect(answer[0][\"id\"] == firstval-1,false);\r",
									"    pm.collectionVariables.set(\"specialities\", answer);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"randomgroupid\", _.random(1,pm.collectionVariables.get(\"specgroup\").length));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/Specialities?spec_group_id={{randomgroupid}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"Specialities"
							],
							"query": [
								{
									"key": "spec_group_id",
									"value": "{{randomgroupid}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "HospitalRandom",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var _specs = pm.collectionVariables.get(\"specialities\")\r",
									"pm.collectionVariables.set(\"speciality\",_specs[_.random(0,_specs.length-1)][\"id\"]);\r",
									"cities = [\"London\",\"Birmingham\",\"Liverpool\",\"Bristol\",\"Manchester\",\"Sheffield\",\"Leeds\"];\r",
									"var randadd = \"\"+ _.sample(cities)+\" ,England\";\r",
									"pm.collectionVariables.set(\"randomAddress\",decodeURI(randadd));\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"All status Ok\",function(){\r",
									"    pm.response.to.have.status(200)\r",
									"    pm.response.to.be.ok;\r",
									"    pm.response.to.be.json;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/hospitals?address=&spec_id={{speciality}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"hospitals"
							],
							"query": [
								{
									"key": "address",
									"value": ""
								},
								{
									"key": "spec_id",
									"value": "{{speciality}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "RandomWrongValues",
			"item": [
				{
					"name": "SpecialitiesRandomWrong",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"All status Ok\",function(){\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.be.ok;\r",
									"    pm.response.to.be.json;\r",
									"    var answer = pm.response.json();\r",
									"    var firstval = answer[0][\"id\"];\r",
									"    for( var i =0; i < answer.length; i++){\r",
									"        pm.expect(answer[i][\"id\"] == firstval+i,true);\r",
									"        pm.expect(answer[i][\"specgroup\"][\"id\"] == pm.collectionVariables.get(\"randomgroupid\"),true);\r",
									"    }\r",
									"    pm.expect(answer[0][\"id\"] == firstval-1,false);\r",
									"    pm.collectionVariables.set(\"specialities\", answer);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"wrongrandomgroupid\", _.random(pm.collectionVariables.get(\"specgroup\").length)+1,20);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/Specialities?spec_group_id={{randomgroupid}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"Specialities"
							],
							"query": [
								{
									"key": "spec_group_id",
									"value": "{{randomgroupid}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "HospitalRandomSpecWrong",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"wrongspeciality\",_.random(80,120));\r",
									"cities = [\"London\",\"Birmingham\",\"Liverpool\",\"Bristol\",\"Manchester\",\"Sheffield\",\"Leeds\"];\r",
									"var randadd = \"\"+ _.sample(cities)+\" ,England\";\r",
									"pm.collectionVariables.set(\"randomAddress\",decodeURI(randadd));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Speciality doesn't exist\",function(){\r",
									"    pm.response.to.have.status(400)\r",
									"    pm.response.text(\"Invalid Request, Verfiy \");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/hospitals?address={{randomAddress}}&spec_id={{wrongspeciality}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"hospitals"
							],
							"query": [
								{
									"key": "address",
									"value": "{{randomAddress}}"
								},
								{
									"key": "spec_id",
									"value": "{{wrongspeciality}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "HospitalRandomAddressWrong",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var _specs = pm.collectionVariables.get(\"specialities\")\r",
									"pm.collectionVariables.set(\"speciality\",_specs[_.random(0,_specs.length-1)][\"id\"]);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Wrong Address\",function(){\r",
									"    pm.response.to.have.status(400);\r",
									"    pm.response.text(\"Nomination Failed to get Coordinates, Array Null\")\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/hospitals?address={{$randomPassword}}&spec_id={{speciality}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"hospitals"
							],
							"query": [
								{
									"key": "address",
									"value": "{{$randomPassword}}"
								},
								{
									"key": "spec_id",
									"value": "{{speciality}}"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://localhost:29001",
			"type": "string"
		},
		{
			"key": "authToken",
			"value": "",
			"type": "string"
		},
		{
			"key": "specgroup",
			"value": ""
		},
		{
			"key": "randomgroupid",
			"value": ""
		},
		{
			"key": "specialities",
			"value": ""
		},
		{
			"key": "speciality",
			"value": ""
		},
		{
			"key": "randomAddress",
			"value": ""
		},
		{
			"key": "wrongspeciality",
			"value": ""
		},
		{
			"key": "wrongrandomgroupid",
			"value": ""
		}
	]
}